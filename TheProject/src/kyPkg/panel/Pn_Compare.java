/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kyPkg.panel;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import static kyPkg.panel.JP_Ancestor.standAlone;
import kyPkg.uFile.DosEmu;
import kyPkg.uFile.FileUtil;
import kyPkg.uFile.ListArrayUtil;
import kyPkg.util.DnDAdapter;
import static kyPkg.util.Joint.join;

/**
 *
 * @author ejqp7
 */
public class Pn_Compare extends javax.swing.JPanel {

    private boolean trim = false;

    /**
     * Creates new form Pn_CompareEx
     */
    public Pn_Compare() {
        super();
        setSize(720, 480);
        this.setOpaque(false);
        initComponents();
        new java.awt.dnd.DropTarget(txtFile1, new DnDAdapter(txtFile1)); // dnd.DropTarget
        new java.awt.dnd.DropTarget(txtFile2, new DnDAdapter(txtFile2)); // dnd.DropTarget
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtFile1 = new javax.swing.JTextField();
        txtFile2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnCompare = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnReadIt = new javax.swing.JButton();
        btnWriteIt = new javax.swing.JButton();
        txtLimit = new javax.swing.JTextField();
        chkHex = new javax.swing.JCheckBox();
        txtRegex = new javax.swing.JTextField();
        chkHir = new javax.swing.JCheckBox();
        chkTrim = new javax.swing.JCheckBox();
        jSplitPane2 = new javax.swing.JSplitPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtLeft = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtRight = new javax.swing.JTextArea();

        setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        setMinimumSize(new java.awt.Dimension(640, 480));
        setPreferredSize(new java.awt.Dimension(640, 480));
        setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMinimumSize(new java.awt.Dimension(940, 100));
        jPanel2.setPreferredSize(new java.awt.Dimension(940, 100));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        txtFile1.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        txtFile1.setMaximumSize(new java.awt.Dimension(600, 25));
        txtFile1.setMinimumSize(new java.awt.Dimension(600, 25));
        txtFile1.setOpaque(true);
        txtFile1.setPreferredSize(new java.awt.Dimension(600, 25));
        jPanel2.add(txtFile1);

        txtFile2.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        txtFile2.setMaximumSize(new java.awt.Dimension(600, 25));
        txtFile2.setMinimumSize(new java.awt.Dimension(600, 25));
        txtFile2.setPreferredSize(new java.awt.Dimension(600, 25));
        txtFile2.setRequestFocusEnabled(false);
        jPanel2.add(txtFile2);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMaximumSize(new java.awt.Dimension(640, 40));
        jPanel1.setMinimumSize(new java.awt.Dimension(640, 40));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 40));

        btnCompare.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        btnCompare.setText("Compare");
        btnCompare.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompareActionPerformed(evt);
            }
        });
        jPanel1.add(btnCompare);

        btnReset.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel1.add(btnReset);

        btnReadIt.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        btnReadIt.setText("ReadIt");
        btnReadIt.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadItActionPerformed(evt);
            }
        });
        jPanel1.add(btnReadIt);

        btnWriteIt.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        btnWriteIt.setText("WriteIt");
        btnWriteIt.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteItActionPerformed(evt);
            }
        });
        jPanel1.add(btnWriteIt);

        txtLimit.setText("2048");
        jPanel1.add(txtLimit);

        chkHex.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        chkHex.setText("HexCompare?");
        chkHex.setOpaque(true);
        jPanel1.add(chkHex);

        txtRegex.setText("*.bas");
        jPanel1.add(txtRegex);

        chkHir.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        chkHir.setText("HirCompare?");
        chkHir.setOpaque(true);
        jPanel1.add(chkHir);

        chkTrim.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        chkTrim.setText("Trim?");
        chkTrim.setOpaque(true);
        jPanel1.add(chkTrim);

        jPanel2.add(jPanel1);

        add(jPanel2, java.awt.BorderLayout.NORTH);

        jSplitPane2.setDividerLocation(360);
        jSplitPane2.setOneTouchExpandable(true);

        txtLeft.setColumns(20);
        txtLeft.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        txtLeft.setRows(5);
        txtLeft.setTabSize(4);
        jScrollPane3.setViewportView(txtLeft);

        jSplitPane2.setLeftComponent(jScrollPane3);

        txtRight.setColumns(20);
        txtRight.setFont(new java.awt.Font("ÇlÇr ÉSÉVÉbÉN", 0, 12)); // NOI18N
        txtRight.setRows(5);
        txtRight.setTabSize(4);
        jScrollPane4.setViewportView(txtRight);

        jSplitPane2.setRightComponent(jScrollPane4);

        add(jSplitPane2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCompareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompareActionPerformed
        compareIt();
    }//GEN-LAST:event_btnCompareActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtFile1.setText("");
        txtFile2.setText("");
        txtLeft.setText("");
        txtRight.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnReadItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadItActionPerformed
        readIt();
    }//GEN-LAST:event_btnReadItActionPerformed

    private void btnWriteItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteItActionPerformed
        writeIt();
    }//GEN-LAST:event_btnWriteItActionPerformed
    private void compareIt() {
        String rStr = "";
        String wPath1 = txtFile1.getText();
        String wPath2 = txtFile2.getText();
        trim = chkTrim.isSelected();
        if (wPath1.trim().equals("")) {
            wPath1 = "./left.txt";
            txtFile1.setText(wPath1);
            FileUtil.string2file_(wPath1, txtLeft.getText());
        }
        if (wPath2.trim().equals("")) {
            wPath2 = "./right.txt";
            txtFile2.setText(wPath2);
            FileUtil.string2file_(wPath2, txtRight.getText());
        }

        int limit = Integer.parseInt(txtLimit.getText());
        String regex = txtRegex.getText();
        List<String> statLog = new ArrayList();
        // àŸÇ»ÇÈÉfÉBÉåÉNÉgÉäÇ…Ç†ÇÈìØñºÉtÉ@ÉCÉãÇ«Ç§ÇµÇÃî‰är
        if (chkHir.isSelected()) {
            List<String> list = DosEmu.getFileList(wPath1, regex);
            for (String srcPath : list) {
                // êeÉpÉXÇèëÇ´ä∑Ç¶ÇÈ
                String dstPath = FileUtil.cnvParent(wPath2,
                        srcPath);
                // ägí£éqÇèëÇ´ä∑Ç¶ÇÈ
                String difPath = FileUtil.cnvExt(srcPath, "dif");
                System.out.println("srcPath>" + srcPath);
                System.out.println("dstPath>" + dstPath);
                System.out.println("difPath>" + difPath);

                // î‰ärÇµÇΩåãâ à·Ç¢Ç™àÍå©à»è„Ç†ÇÍÇŒdiffÇèoóÕÇ∑ÇÈ
                // î‰äråãâ ÇâÊñ Ç…Ç‡ï‘ÇµÇΩÇ¢Å@ÉtÉ@ÉCÉãÇòÇòÇòÇÕÉ}ÉbÉ`ÇµÇ‹ÇπÇÒÇ≈ÇµÇΩ
                kyPkg.tools.Compare ins = new kyPkg.tools.Compare(dstPath,
                        srcPath, limit, trim);
                if (ins.compare() == 0) {
                    // Ç∑Ç◊ÇƒàÍívÇµÇΩÅià·Ç¢Ç™ñ≥ÇØÇÍÇŒâΩÇ‡ÇµÇ»Ç¢Åj
                } else {
                    // àÍívÇµÇ»Ç©Ç¡ÇΩ
                    List<String> diffList = ins.getDuffList();
                    ListArrayUtil.list2File(difPath, diffList);
                    statLog.add(ins.getStatus());
                }
            }
            rStr = join(statLog, "\n") + "\näÆóπÅEÅEÅE";
            txtLeft.setText(rStr);
            txtRight.setText("");

        } else {
            if (chkHex.isSelected()) {
                rStr = new kyPkg.tools.HexCompare(wPath1, wPath2)
                        .compareAndGetStat();
            } else {
                rStr = new kyPkg.tools.Compare(wPath1, wPath2, limit, trim)
                        .compareAndGetStatRez();
            }
            txtLeft.setText(rStr);
            txtRight.setText("");

        }

    }

    private void readIt() {
        String wPath = txtFile1.getText().trim();
        if (wPath.equals("")) {
            JFileChooser fc = new JFileChooser(".");
            if (fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
                wPath = fc.getSelectedFile().toString();
            }
        }
        txtLeft.setText(FileUtil.file2String(wPath));
        txtRight.setText(FileUtil.fileInfo(wPath));
    }

    private void writeIt() {
        JFileChooser fc = new JFileChooser(".");
        if (fc.showSaveDialog(null) != JFileChooser.APPROVE_OPTION) {
            return;
        }
        String wPath = fc.getSelectedFile().toString();
        if (wPath.indexOf(".") == 0) {
            wPath = wPath.trim() + ".txt";
        }
        FileUtil.string2file_(wPath, txtLeft.getText());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompare;
    private javax.swing.JButton btnReadIt;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnWriteIt;
    private javax.swing.JCheckBox chkHex;
    private javax.swing.JCheckBox chkHir;
    private javax.swing.JCheckBox chkTrim;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextField txtFile1;
    private javax.swing.JTextField txtFile2;
    private javax.swing.JTextArea txtLeft;
    private javax.swing.JTextField txtLimit;
    private javax.swing.JTextField txtRegex;
    private javax.swing.JTextArea txtRight;
    // End of variables declaration//GEN-END:variables
	// ------------------------------------------------------------------------
    // main
    // ------------------------------------------------------------------------
    public static void main(String[] argv) {
        standAlone(new Pn_Compare(), "Compare");
    }
}
